version: '3.8'
services:
  # jenkins:
  #   image: jenkins/jenkins:lts
  #   privileged: true
  #   user: root
  #   ports:
  #     - "9000:8080"
  #     - "50000:50000"
  #   container_name: jenkins
  #   volumes:
  #     - ./data/jenkins:/var/jenkins_home
  #     - /var/run/docker.sock:/var/run/docker.sock
  # nexus:
  #   image: sonatype/nexus3
  #   container_name: nexus
  #   ports:
  #     - "9001:8081"
  #   volumes:
  #     - "nexus_data:/nexus-data"
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: "unless-stopped"
    user: root
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9004:9090"
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - ./config:/etc/prometheus
      - prometheus_data:/prometheus
  # postgres:
  #   image: postgres
  #   container_name: sonar_db
  #   environment:
  #     - POSTGRES_USER=sonar
  #     - POSTGRES_PASSWORD=sonar
  #   volumes:
  #     - postgres:/var/lib/postgresql
  #     # This needs explicit mapping due to https://github.com/docker-library/postgres/blob/4e48e3228a30763913ece952c611e5e9b95c8759/Dockerfile.template#L52
  #     - postgres_data:/var/lib/postgresql/data 
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  # sonarqube:
  #   image: sonarqube:latest
  #   container_name: sonarqube
  #   environment:
  #     SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
  #     SONAR_JDBC_USERNAME: sonar
  #     SONAR_JDBC_PASSWORD: sonar
  #   command: -Dsonar.es.bootstrap.checks.disable=true
  #   volumes:
  #     - sonarqube_data:/opt/sonarqube/data
  #     - sonarqube_extensions:/opt/sonarqube/extensions
  #     - sonarqube_logs:/opt/sonarqube/logs
  #   ports:
  #     - "9002:9000"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
volumes:
  nexus_data:
  postgres:
  postgres_data:
  prometheus_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs: