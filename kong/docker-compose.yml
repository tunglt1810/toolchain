version: "3.9"
x-kong-config:
  &kong-env
  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
  KONG_PG_HOST: db
  KONG_PG_USER: ${KONG_PG_USER:-postgres}
  KONG_PG_PASSWORD: password

volumes:
  postgresql_kong_data:
    driver: local
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  kong_tmp_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  kong-net:
    external: false

services:
  db:
    container_name: kong_db
    image: postgres:11.20-alpine3.18
    networks:
      - kong-net
    ports:
      - "7432:5432"
    volumes:
      - "postgresql_kong_data:/var/lib/postgresql/data/pgdata"
    environment:
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DATABASE=kong
      - POSTGRES_SCHEMA=kong
      - PGDATA=/var/lib/postgresql/data/pgdata
  kong-migrations:
    container_name: kong_migrations
    image: "ecosystem-kong:latest"
    command: kong migrations bootstrap
    profiles: [ "database" ]
    depends_on:
      - db
    environment:
      <<: *kong-env
    networks:
      - kong-net
    restart: on-failure
  kong-migrations-up:
    container_name: kong_migrations_up
    image: "ecosystem-kong:latest"
    command: kong migrations up && kong migrations finish
    profiles: [ "database" ]
    depends_on:
      - db
    environment:
      <<: *kong-env
    networks:
      - kong-net
    restart: on-failure
  kong:
    container_name: kong_gateway
    build:
      context: .
      dockerfile: Dockerfile
      tags:
        - "ecosystem-kong:latest"
    image: ecosystem-kong:latest
    user: "${KONG_USER:-kong}"
    depends_on:
      - db
    environment:
      <<: *kong-env
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
      KONG_LOG_LEVEL: "info"
      KONG_PLUGINS: "bundled"
      KONG_STATUS_LISTEN: "0.0.0.0:8100"
    networks:
      - kong-net
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
      - "9091:9091"
      - "8100:8100"
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
    #      - ./config:/etc/kong/
    security_opt:
      - no-new-privileges
  konga:
    container_name: konga
    image: pantsel/konga:0.14.9
    platform: linux/amd64
    restart: on-failure
    depends_on:
      - db
      - kong
    networks:
      - kong-net
    ports:
      - "1337:1337"
    environment:
      - HOST=0.0.0.0
      - PORT=1337
      - DB_ADAPTER=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_DATABASE=kong
      - DB_PASSWORD=password
